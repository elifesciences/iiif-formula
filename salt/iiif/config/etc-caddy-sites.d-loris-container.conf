(config) {

    log {
        output file /var/log/caddy/access.log
        format json {
            time_format rfc3339
        }
    }

    handle /favicon.ico { 
        skip_log
        respond "Not Found" 404
    }

    @robots_disallow {
        path /robots.txt
        header X-Forwarded-Host iiif.elifesciences.org
    }

    handle @robots_disallow {
        header Content-Type text/plain
        respond "User-Agent: *\nDisallow: " 200
    }

    handle /robots.txt {
        header Content-Type text/plain
        respond "User-Agent: *\nDisallow: /" 200
    }

    @path-traversal {
        path_regexp ^(\.|\/)\.
    }
    handle @path-traversal {
        error 403
    }

    handle /ping {
        skip_log
        header Cache-Control "must-revalidate, no-cache, no-store, private"
        header Content-Type "text/plain; charset=UTF-8"
        respond 200 "pong"
    }

    handle /ping-fastly {
        skip_log
        header Cache-Control "must-revalidate, no-cache, no-store, private"
        header Content-Type "text/plain; charset=UTF-8"
        respond 200 "pong"
    }

    reverse_proxy / {
        to localhost:5004
        header_up Cache-Control "public, max-age=31536000, immutable"
    }

    reverse_proxy ~ .*info.json$ {
        to localhost:5004
        header_up Cache-Control "public, max-age=300"
    }

    @fallback {
        path_regexp fallback ^/(.*)\.(tif)$
    }
    handle @fallback {
        rewrite * /{http.regexp.fallback.1}.jpg?fallback=1
    }

    @fallback_info {
        path_regexp fallback_info ^/(.*)\.(tif).*/info.json$
    }
    handle @fallback_info {
        rewrite * /{http.regexp.fallback_info.1}.jpg?fallback=1
    }

    handle {
        reverse_proxy localhost:5004 {
            transport http {
                read_timeout 15s
            }
        }
    }

    respond 404
}

:80 {
    import config
}

{% if salt['elife.cfg']('cfn.outputs.DomainName') %}
:443 {
    import ../snippets/certs
    import config
}
{% endif %}
