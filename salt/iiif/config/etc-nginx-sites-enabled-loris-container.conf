upstream loris {
    # never stop the upstream in case of TIFFs failures,
    # so that fallback JPGs can be used as a source
    # https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails
    server localhost:5004 max_fails=0;
}

# Fastly does not forward the Host header but sets the origins' one, we use the custom X-Forwarded-Host:
# https://github.com/elifesciences/builder/blob/master/src/buildercore/fastly/vcl/original-host.vcl
map $http_x_forwarded_host $robots_disallow {
    default "/";
    "~^iiif.elifesciences.org\s*(?:,|$)" "";
}

server {
    listen 80;
    {% if salt['elife.only_on_aws']() %}
    # only useful if not behind ELB
    listen 443 ssl;
    {% endif %}

    {% if salt['elife.only_on_aws']() %}
    server_name {{ salt['elife.cfg']('project.project_hostname') }}
                {{ salt['elife.cfg']('project.full_hostname') }};
    {% else %}
    server_name localhost;
    {% endif %}


    charset     utf-8;
    access_log /var/log/nginx/loris.access.log combined_with_time;
    error_log /var/log/nginx/loris.error.log;

    # Allow using proper IIIF prefixes rather than Loris's syntax
    rewrite ^/({{ pillar.iiif.loris.templates.keys()|join("|") }})/(.*)$ /$1:$2;

    location /favicon.ico {
        return 404;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-Agent: *\nDisallow: $robots_disallow\n";
    }

    location = /ping {
        add_header Cache-Control "must-revalidate, no-cache, no-store, private";
        add_header Content-Type "text/plain; charset=UTF-8";
        return 200 "pong";
    }

    location = /ping-fastly {
        add_header Cache-Control "must-revalidate, no-cache, no-store, private";
        add_header Content-Type "text/plain; charset=UTF-8";
        return 200 "pong";
    }

    location / {
        uwsgi_pass loris;
        include uwsgi_params;

        # cache result 'forever' (a year, in seconds)
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location ~ .*/info.json$ {
        uwsgi_pass loris;
        include uwsgi_params;

        # cache result for five minutes
        add_header Cache-Control "public, max-age=300";
    }
}
