upstream loris {
    server unix:///tmp/loris-uwsgi.sock;
}

server {
    {% if salt['elife.only_on_aws']() %}
        {% if salt['elife.cfg']('project.elb') %}
        listen 80;
        {% else %}
        listen 443 ssl;
        {% endif %}
    {% else %}
    listen 80;
    {% endif %}

    {% if salt['elife.only_on_aws']() %}
    server_name {{ salt['elife.cfg']('project.project_hostname') }}
                {{ salt['elife.cfg']('project.full_hostname') }}
    {% else %}
    server_name localhost;
    {% endif %}


    charset     utf-8;
    access_log /var/log/nginx/loris.access.log combined_with_time;
    error_log /var/log/nginx/loris.error.log;

    location /favicon.ico {
        return 404;
    }

    location / {
        uwsgi_pass loris;
        #uwsgi_read_timeout 15s;
        include /etc/uwsgi/params;
        add_header Cache-Control "public, max-age=86400, immutable";

        uwsgi_intercept_errors on;
        error_page 500 502 =200 @iiif_fallback;
    }

    location @iiif_fallback {
        # TODO: can we add an header or an indication that we are doing a fallback?
        {% for failing_format, fallback in pillar.iiif.fallback.iteritems() %}
        rewrite ^/(.*)\.{{ failing_format }}(.*) /$1.{{ fallback }}$2 last;
        #rewrite ^/(.*)\.{{ failing_format }}(.*)/info.json /$1.{{ fallback }}$2/info.json last;
        {% endfor %}
        add_header X-Iiif-Fallback true;
    }
}
