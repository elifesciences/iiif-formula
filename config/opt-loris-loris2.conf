# loris2.conf
#
# This file is parsed by the ConfigObj library:
#
# <http://www.voidspace.org.uk/python/configobj.html>
#
# ConfigObj uses an ini-like syntax with a few important changes and extensions,
# which are explained here:
#
# <http://www.voidspace.org.uk/python/configobj.html#config-files>
#
# Note that 'unrepr' mode is used, which means that values are parsed as Python
# datatypes, e.g. strings are in quotes, integers are not, True is used for the
# boolean value TRUE, False for the boolean value FALSE, and lists are in []
# with commas (',') as the separators.
#
# <http://www.voidspace.org.uk/python/configobj.html#unrepr-mode>
#
# String interpolation is enabled using the "template" style. OS environment
# variables are available for interpolation, e.g., run_as_user='$USER'
#
# <http://www.voidspace.org.uk/python/configobj.html#string-interpolation>
#

[loris.Loris]
tmp_dp = '/tmp/loris2/tmp' # r--
www_dp = '/var/www/loris2' # r-x
run_as_user = 'www-data'
run_as_group = 'www-data'
enable_caching = True
redirect_canonical_image_request = False
redirect_id_slash_to_info = True
max_size_above_full = 200

[logging]
log_to = 'file'    # 'console'|'file'
log_level = 'INFO' # 'DEBUG'|'INFO'|'WARNING'|'ERROR'|'CRITICAL'
log_dir = '/opt/loris/log' # rw-
max_size = 5242880 # 5 MB
max_backups = 5
format = '%(asctime)s (%(name)s) [%(levelname)s]: %(message)s'

[resolver]

# Resolvers configuration from pillar
{% for key, value in pillar.iiif.loris.resolver.items() %}
{{ key }} = '{{ value }}'
{% endfor %}

cache_root = '/usr/local/share/images/loris'

templates = '{{ pillar.iiif.loris.templates.keys()|join(",") }}'
{% for prefix, url in pillar.iiif.loris.templates.items() %}
[[ {{ prefix }} ]]
url = '{{ url }}'
{% endfor %}

[img.ImageCache]
cache_dp = '/var/cache/loris' # rwx

[img_info.InfoCache]
cache_dp = '/var/cache/loris' # rwx

[transforms]
dither_bitonal_images = False
target_formats = ['jpg','png','gif','webp']

    [[jpg]]
    impl = 'JPG_Transformer'

    [[tif]]
    impl = 'TIF_Transformer'

    [[png]]
    impl = 'PNG_Transformer'

    [[jp2]]
    impl = 'KakaduJP2Transformer'
    tmp_dp = '/tmp/loris/tmp/jp2' # rwx
    kdu_expand = '/usr/local/bin/kdu_expand' # r-x
    kdu_libs = '/usr/local/lib' # r--
    num_threads = '4' # string!
    mkfifo = '/usr/bin/mkfifo' # r-x
    map_profile_to_srgb = False
    srgb_profile_fp = '/usr/share/color/icc/colord/sRGB.icc' # r--

